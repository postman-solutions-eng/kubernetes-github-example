name: main-deployment
on:
  push:
    branches: [main]
  workflow_dispatch:
permissions:
  id-token: write
  contents: read
env:
  AWS_REGION: ${{ secrets.AWS_REGION }}
  AWS_ASSUME_ROLE_ARN: ${{ secrets.AWS_ASSUME_ROLE_ARN }}
  AWS_SESSION_DURATION: ${{ secrets.AWS_SESSION_DURATION }}
  AWS_EKS_CLUSTER: ${{ secrets.AWS_EKS_CLUSTER }}
  DOCKER_BUILDKIT: 1
  BUILDKIT_INLINE_CACHE: 1
jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: run functional tests
        run: npm run container-test-functional
      - name: run e2e tests
        run: npm run container-test-e2e
  push:
    needs: [test]
    runs-on: ubuntu-latest
    environment: production
    steps:
      - uses: actions/checkout@v2
      - name: configure AWS credentials
        id: configure-aws
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-region: ${{ env.AWS_REGION }}
          role-to-assume: ${{ env.AWS_ASSUME_ROLE_ARN }}
          role-duration-seconds: ${{ env.AWS_SESSION_DURATION }}
      - name: login to AWS ECR
        id: ecr-login
        uses: aws-actions/amazon-ecr-login@v1
      - name: build image and push to ECR
        id: push-image
        env:
          ECR_REPO: ${{ secrets.ECR_REPO }}
          ECR_REGISTRY: ${{ steps.ecr-login.outputs.registry }}
          IMAGE_TAG: ${{ github.sha }}
        run: |
          aws ecr create-repository --repository-name=$ECR_REPO 2>&1 | grep -v RepositoryAlreadyExistsException || true
          export FULL_IMAGE="$ECR_REGISTRY/$ECR_REPO:$IMAGE_TAG"
          docker build --target=app --tag="$FULL_IMAGE" . && \
          docker push "$FULL_IMAGE"
  kubernetes:
    needs: [push]
    runs-on: ubuntu-latest
    environment: production
    steps:
      - uses: actions/checkout@v2
      - uses: ./actions/kubernetes
        with:
          aws-region: ${{ env.AWS_REGION }}
          aws-role-to-assume: ${{ env.AWS_ASSUME_ROLE_ARN }}
          aws-role-duration-seconds: ${{ env.AWS_SESSION_DURATION }}
          app-name: ${{ env.APP }}
          ecr-repo-name: ${{ env.ECR_REPO }}
