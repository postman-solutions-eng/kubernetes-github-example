name: pr-deployment
on:
  issue_comment:
    types: [created]
  manual_dispatch:
permissions:
  id-token: write
  contents: read
jobs:
  deploy-check:
    runs-on: ubuntu-latest
    steps:
      - name: acknowledge deployment request to commenter
        id: check
        uses: khan/pull-request-comment-trigger@master
        with:
          trigger: '/deploy'
          reaction: rocket
        env:
          GITHUB_TOKEN: '${{ secrets.GITHUB_TOKEN }}'
    outputs:
      triggered: ${{ steps.check.outputs.triggered }}

  setup-deployment:
    runs-on: ubuntu-latest
    needs: [deploy-check]
    outputs:
      deployment: ${{ fromJson(steps.create_deployment.outputs.data).id }}
    if: needs.deploy-check.outputs.triggered == 'true'
    steps:
      - name: get pull request ref
        id: get_pull_request_ref
        uses: octokit/request-action@v2.x
        with:
          route: GET /repos/:repository/pulls/:issue_id
          repository: ${{ github.repository }}
          issue_id: ${{ github.event.issue.number }}
        env:
          GITHUB_TOKEN: '${{ secrets.GITHUB_TOKEN }}'

      - name: create deployment
        id: create_deployment
        uses: octokit/request-action@v2.x
        with:
          route: POST /repos/:repository/deployments
          repository: ${{ github.repository }}
          ref: ${{ fromJson(steps.get_pull_request_ref.outputs.data).head.ref }}
          environment: dev
          auto_merge: false
        env:
          GITHUB_TOKEN: '${{ secrets.GITHUB_TOKEN }}'

      - name: set deployment status to in progress
        id: start_deployment
        uses: octokit/request-action@v2.x
        with:
          route: POST /repos/:repository/deployments/:deployment/statuses
          repository: ${{ github.repository }}
          deployment: ${{ fromJson(steps.create_deployment.outputs.data).id }}
          log_url: https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }}
          state: in_progress
        env:
          GITHUB_TOKEN: '${{ secrets.GITHUB_TOKEN }}'

  deploy:
    name: deploy the pull request
    needs: [setup-deployment]
    outputs:
      deployment: ${{ needs.setup-deployment.outputs.deployment }}
    runs-on: ubuntu-latest
    uses: postman-solutions-eng/kubernetes-github-example/.github/workflows/deploy.yaml@pr-workflows
    with:
      app-name: ${{ format('dev-quotable-pr-{0}', github.event.number) }}
      ecr-repo-name: ${{ format('github-kubernetes-example/dev-quotable-pr-{0}', github.event.number) }}
    secrets:
      AWS_ASSUME_ROLE_ARN: ${{ secrets.AWS_ASSUME_ROLE_ARN }}
      AWS_SESSION_DURATION: ${{ secrets.AWS_SESSION_DURATION }}
      AWS_EKS_CLUSTER: ${{ secrets.AWS_EKS_CLUSTER }}
      AWS_REGION: ${{ secrets.AWS_REGION }}

  set-deployment-outcome:
    needs: [deploy]
    runs-on: ubuntu-latest
    steps:
      - name: set deployment status to success
        id: successful_deployment
        uses: octokit/request-action@v2.x
        with:
          route: POST /repos/:repository/deployments/:deployment/statuses
          repository: ${{ github.repository }}
          deployment: ${{ needs.deploy.outputs.deployment }}
          log_url: https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }}
          state: success
        env:
          GITHUB_TOKEN: '${{ secrets.GITHUB_TOKEN }}'
      - name: set deployment status to failure
        id: failed_deployment
        uses: octokit/request-action@v2.x
        if: failure()
        with:
          route: POST /repos/:repository/deployments/:deployment/statuses
          repository: ${{ github.repository }}
          deployment: ${{ needs.deploy.outputs.deployment }}
          log_url: https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }}
          state: failure
        env:
          GITHUB_TOKEN: '${{ secrets.GITHUB_TOKEN }}'
