name: manage resources in kubernetes
inputs:
  aws-eks-cluster:
    type: string
    required: true
  app-name:
    type: string
    required: true
  name-suffix:
    type: string
    required: false
  image-ref: # empty on delete
    type: string
    required: false
  delete:
    type: boolean
    required: false
    default: false
outputs:
  url:
    value: ${{ steps.deploy-to-kubernetes.outputs.url }}
runs:
  using: composite
  steps:
    - name: login to AWS ECR
      id: ecr-login
      uses: aws-actions/amazon-ecr-login@v1
    - name: build resources
      env:
        APP: ${{ inputs.app-name }}
        NAME_SUFFIX: ${{ inputs.name-suffix }}
        IMAGE_REF: ${{ inputs.image-ref }}
      shell: bash
      run: |
        IMAGE_REF="$(echo $IMAGE_REF | base64 -d)"
        cd ./manifests
        kustomize edit set label "app:$APP"
        kustomize edit set image app-image="$IMAGE_REF"
        [[ ! -z $NAME_SUFFIX ]] && kustomize edit set namesuffix -- "$NAME_SUFFIX"
        kustomize build -o "$RUNNER_TEMP/_resolved.yaml"
    - name: get kubeconfig from eks
      env:
        AWS_EKS_CLUSTER: ${{ inputs.aws-eks-cluster }}
      shell: bash
      run: |
        aws eks update-kubeconfig --name $AWS_EKS_CLUSTER
    - name: deploy to kubernetes
      id: deploy-to-kubernetes
      if: ${{ inputs.delete == 'false' }}
      env:
        APP: ${{ inputs.app-name }}
      shell: bash
      run: |
        kubectl apply -f "$RUNNER_TEMP/_resolved.yaml"
        kubectl rollout status "deployment/$APP"
        export SVC_URL="$(kubectl get svc $APP -o jsonpath='{.status.loadBalancer.ingress[0].hostname}')"
        echo "::set-output name=url::$SVC_URL"
    - name: remove from kubernetes
      if: ${{ inputs.delete == 'true' }}
      env:
        APP: ${{ inputs.app-name }}
      shell: bash
      run: |
        kubectl delete -f "$RUNNER_TEMP/_resolved.yaml"
